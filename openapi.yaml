openapi: 3.0.0
info:
  title: Firestore Adapter API
  version: 1.0.0
  description: REST API for interacting with Google Firestore collections.
servers:
  - url: http://localhost:8080
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
paths:
  /:
    get:
      summary: Root endpoint
      description: Returns a simple status message.
      responses:
        '200':
          description: Service is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /health:
    get:
      summary: Health check
      description: Returns service health information.
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /protected:
    get:
      summary: Protected route
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Request succeeded with valid API key
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '401':
          description: Missing or invalid API key
  /documents/{collection}:
    get:
      summary: Query documents in a collection
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: order_by
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: string
      responses:
        '200':
          description: Query results
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Create a document with an auto-generated ID
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: collection
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Document created
          content:
            application/json:
              schema:
                type: object
  /documents/{collection}/{doc_id}:
    get:
      summary: Read a single document
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: path
          name: doc_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document data
        '404':
          description: Document not found
    post:
      summary: Create a document using the provided ID
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: path
          name: doc_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Document created
    put:
      summary: Update an existing document
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: path
          name: doc_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Document updated
        '404':
          description: Document not found
    delete:
      summary: Delete a document
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: path
          name: doc_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document deleted
        '404':
          description: Document not found
  /collections/{collection}/subcollections/{subcollection}:
    get:
      summary: Query a collection with a subcollection
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: collection
          required: true
          schema:
            type: string
        - in: path
          name: subcollection
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Query results
          content:
            application/json:
              schema:
                type: object
